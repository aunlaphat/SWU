/**
 * Generated by orval v6.23.0 üç∫
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import { HttpClient } from '@angular/common/http';
/** import { HttpHeaders } from '@angular/common/http'; */
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { environment } from 'src/environments/environment';
import { ResponseOneIf } from 'src/app/models/common';
import type { UploadFileData } from '../models/common/uploadFileData';

@Injectable({ providedIn: 'root' })
export class UploadFileService {
    constructor(private http: HttpClient) {}

    postSystem(file: Blob): Observable<ResponseOneIf<UploadFileData>> {
        const formData = new FormData();
        formData.append('file', file);
        return this.http.post<ResponseOneIf<UploadFileData>>(`${environment.apiUrl}/upload/system`, formData);
    }
    postReceipt(file: Blob): Observable<ResponseOneIf<UploadFileData>> {
        const formData = new FormData();
        formData.append('file', file);
        return this.http.post<ResponseOneIf<UploadFileData>>(`${environment.apiUrl}/upload/receipt`, formData);
    }
    postPersonal(file: Blob): Observable<ResponseOneIf<UploadFileData>> {
        const formData = new FormData();
        formData.append('file', file);
        return this.http.post<ResponseOneIf<UploadFileData>>(`${environment.apiUrl}/upload/personal`, formData);
    }
    postMember(file: Blob): Observable<ResponseOneIf<UploadFileData>> {
        const formData = new FormData();
        formData.append('file', file);
        return this.http.post<ResponseOneIf<UploadFileData>>(`${environment.apiUrl}/upload/member`, formData);
    }
    postMasterFinancial(file: Blob): Observable<ResponseOneIf<UploadFileData>> {
        const formData = new FormData();
        formData.append('file', file);
        return this.http.post<ResponseOneIf<UploadFileData>>(`${environment.apiUrl}/upload/master-financial`, formData);
    }
    postMasterDocument(file: Blob): Observable<ResponseOneIf<UploadFileData>> {
        const formData = new FormData();
        formData.append('file', file);
        return this.http.post<ResponseOneIf<UploadFileData>>(`${environment.apiUrl}/upload/master-document`, formData);
    }
    postCoursepublic(file: Blob): Observable<ResponseOneIf<UploadFileData>> {
        const formData = new FormData();
        formData.append('file', file);
        return this.http.post<ResponseOneIf<UploadFileData>>(`${environment.apiUrl}/upload/coursepublic`, formData);
    }
    postCourse(file: Blob): Observable<ResponseOneIf<UploadFileData>> {
        const formData = new FormData();
        formData.append('file', file);
        return this.http.post<ResponseOneIf<UploadFileData>>(`${environment.apiUrl}/upload/course`, formData);
    }
    postBanner(file: Blob): Observable<ResponseOneIf<UploadFileData>> {
        const formData = new FormData();
        formData.append('file', file);
        return this.http.post<ResponseOneIf<UploadFileData>>(`${environment.apiUrl}/upload/banner`, formData);
    }
    postNews(file: Blob): Observable<ResponseOneIf<UploadFileData>> {
        const formData = new FormData();
        formData.append('file', file);
        return this.http.post<ResponseOneIf<UploadFileData>>(`${environment.apiUrl}/upload/news`, formData);
    }
}
