/**
 * Generated by orval v6.23.0 üç∫
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import type { DropdownCriteriaData, DropdownData, DropdownTambonData, ResponseListIf } from '../models/common';
import { environment } from 'src/environments/environment';

@Injectable({ providedIn: 'root' })
export class DropdownService {
    constructor(private http: HttpClient) {}

    getTambonDropdown(dropdownCriteriaData: DropdownCriteriaData): Observable<ResponseListIf<DropdownTambonData>> {
        return this.http.post<ResponseListIf<DropdownTambonData>>(
            `${environment.apiUrl}/dropdown/tambon`,
            dropdownCriteriaData
        );
    }
    getRoleDropdown(dropdownCriteriaData: DropdownCriteriaData): Observable<ResponseListIf<DropdownData>> {
        return this.http.post<ResponseListIf<DropdownData>>(
            `${environment.apiUrl}/dropdown/role`,
            dropdownCriteriaData
        );
    }
    getProvinceDropdown(dropdownCriteriaData: DropdownCriteriaData): Observable<ResponseListIf<DropdownData>> {
        return this.http.post<ResponseListIf<DropdownData>>(
            `${environment.apiUrl}/dropdown/province`,
            dropdownCriteriaData
        );
    }
    getPrefixnameDropdown(dropdownCriteriaData: DropdownCriteriaData): Observable<ResponseListIf<DropdownData>> {
        return this.http.post<ResponseListIf<DropdownData>>(
            `${environment.apiUrl}/dropdown/prefixname`,
            dropdownCriteriaData
        );
    }
    getPersonalDropdown(dropdownCriteriaData: DropdownCriteriaData): Observable<ResponseListIf<DropdownData>> {
        return this.http.post<ResponseListIf<DropdownData>>(
            `${environment.apiUrl}/dropdown/personal`,
            dropdownCriteriaData
        );
    }
    getOccupationDropdown(dropdownCriteriaData: DropdownCriteriaData): Observable<ResponseListIf<DropdownData>> {
        return this.http.post<ResponseListIf<DropdownData>>(
            `${environment.apiUrl}/dropdown/occupation`,
            dropdownCriteriaData
        );
    }
    getOccupationGroupDropdown(dropdownCriteriaData: DropdownCriteriaData): Observable<ResponseListIf<DropdownData>> {
        return this.http.post<ResponseListIf<DropdownData>>(
            `${environment.apiUrl}/dropdown/occupation-group`,
            dropdownCriteriaData
        );
    }
    getMethodDropdown(dropdownCriteriaData: DropdownCriteriaData): Observable<ResponseListIf<DropdownData>> {
        return this.http.post<ResponseListIf<DropdownData>>(
            `${environment.apiUrl}/dropdown/method`,
            dropdownCriteriaData
        );
    }
    getLookup(dropdownCriteriaData: DropdownCriteriaData): Observable<ResponseListIf<DropdownData>> {
        return this.http.post<ResponseListIf<DropdownData>>(
            `${environment.apiUrl}/dropdown/lookup`,
            dropdownCriteriaData
        );
    }
    getGeneralSkillDropdown(dropdownCriteriaData: DropdownCriteriaData): Observable<ResponseListIf<DropdownData>> {
        return this.http.post<ResponseListIf<DropdownData>>(
            `${environment.apiUrl}/dropdown/general-skill`,
            dropdownCriteriaData
        );
    }
    getDepartmentDropdown(dropdownCriteriaData: DropdownCriteriaData): Observable<ResponseListIf<DropdownData>> {
        return this.http.post<ResponseListIf<DropdownData>>(
            `${environment.apiUrl}/dropdown/department`,
            dropdownCriteriaData
        );
    }
    getCourseTypeDropdown(dropdownCriteriaData: DropdownCriteriaData): Observable<ResponseListIf<DropdownData>> {
        return this.http.post<ResponseListIf<DropdownData>>(
            `${environment.apiUrl}/dropdown/course-type`,
            dropdownCriteriaData
        );
    }
    getCourseMainDropdown(dropdownCriteriaData: DropdownCriteriaData): Observable<ResponseListIf<DropdownData>> {
        return this.http.post<ResponseListIf<DropdownData>>(
            `${environment.apiUrl}/dropdown/course-main`,
            dropdownCriteriaData
        );
    }
    getCoursepublicMainDropdown(dropdownCriteriaData: DropdownCriteriaData): Observable<ResponseListIf<DropdownData>> {
        return this.http.post<ResponseListIf<DropdownData>>(
            `${environment.apiUrl}/dropdown/coursepublic-main`,
            dropdownCriteriaData
        );
    }
    getCountryDropdown(dropdownCriteriaData: DropdownCriteriaData): Observable<ResponseListIf<DropdownData>> {
        return this.http.post<ResponseListIf<DropdownData>>(
            `${environment.apiUrl}/dropdown/country`,
            dropdownCriteriaData
        );
    }
    getBankDropdown(dropdownCriteriaData: DropdownCriteriaData): Observable<ResponseListIf<DropdownData>> {
        return this.http.post<ResponseListIf<DropdownData>>(
            `${environment.apiUrl}/dropdown/bank`,
            dropdownCriteriaData
        );
    }
    getUserDropdown(dropdownCriteriaData: DropdownCriteriaData): Observable<ResponseListIf<DropdownData>> {
        return this.http.post<ResponseListIf<DropdownData>>(
            `${environment.apiUrl}/dropdown/user`,
            dropdownCriteriaData
        );
    }
    getBankBranchDropdown(dropdownCriteriaData: DropdownCriteriaData): Observable<ResponseListIf<DropdownData>> {
        return this.http.post<ResponseListIf<DropdownData>>(
            `${environment.apiUrl}/dropdown/bank-branch`,
            dropdownCriteriaData
        );
    }
    getBankAccountDropdown(dropdownCriteriaData: DropdownCriteriaData): Observable<ResponseListIf<DropdownData>> {
        return this.http.post<ResponseListIf<DropdownData>>(
            `${environment.apiUrl}/dropdown/bank-account`,
            dropdownCriteriaData
        );
    }
    getAmphurDropdown(dropdownCriteriaData: DropdownCriteriaData): Observable<ResponseListIf<DropdownData>> {
        return this.http.post<ResponseListIf<DropdownData>>(
            `${environment.apiUrl}/dropdown/amphur`,
            dropdownCriteriaData
        );
    }
    getTeacherDropdown(dropdownCriteriaData: DropdownCriteriaData): Observable<ResponseListIf<DropdownData>> {
        return this.http.post<ResponseListIf<DropdownData>>(
            `${environment.apiUrl}/dropdown/teacher`,
            dropdownCriteriaData
        );
    }
}
