/**
 * Generated by orval v6.23.0 üç∫
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import { HttpClient } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { environment } from 'src/environments/environment';
import { ResponseListIf, ResponseOneIf } from '../models/common';
import type {
    CourseActivityData,
    CourseActivityMethodData,
    CourseAttachData,
    CourseCompanyData,
    CourseInstructorData,
    CourseLogData,
    CourseMainData,
    CourseMatchingData,
    CourseOccupationData,
    CourseRequestAttachData,
    CourseScloData,
    CourseSkillData,
    CourseTargetData,
    CoursepublicAttachData,
    CoursepublicInstructorData,
    CoursepublicLogData,
    CoursepublicMainData,
    CoursepublicMediaData,
    SwuCurriculumData
} from '../models/course-management';
import { FinancePaymentData } from '../models/financial-management';
import { MasGeneralSkillLevelData, MasSharePercentData } from '../models/master';
import { AutUserData } from '../models/user-management';
@Injectable({ providedIn: 'root' })
export class CourseManagementService {
    constructor(private http: HttpClient) {}

    getCoursepublicMedia(coursepublicMediaId: number): Observable<ResponseOneIf<CoursepublicMediaData>> {
        return this.http.get<ResponseOneIf<CoursepublicMediaData>>(
            `${environment.apiUrl}/course-management/coursepublic-media/${coursepublicMediaId}`
        );
    }
    putCoursepublicMedia(
        coursepublicMediaId: number,
        coursepublicMediaData: CoursepublicMediaData
    ): Observable<ResponseOneIf<CoursepublicMediaData>> {
        return this.http.put<ResponseOneIf<CoursepublicMediaData>>(
            `${environment.apiUrl}/course-management/coursepublic-media/${coursepublicMediaId}`,
            coursepublicMediaData
        );
    }
    getCoursepublicMain(coursepublicId: number): Observable<ResponseOneIf<CoursepublicMainData>> {
        return this.http.get<ResponseOneIf<CoursepublicMainData>>(
            `${environment.apiUrl}/course-management/coursepublic-main/${coursepublicId}`
        );
    }
    putCoursepublicMain(
        coursepublicId: number,
        coursepublicMainData: CoursepublicMainData
    ): Observable<ResponseOneIf<CoursepublicMainData>> {
        return this.http.put<ResponseOneIf<CoursepublicMainData>>(
            `${environment.apiUrl}/course-management/coursepublic-main/${coursepublicId}`,
            coursepublicMainData
        );
    }
    putCoursepublicMainStatus(
        coursepublicId: number,
        coursepublicMainData: CoursepublicMainData
    ): Observable<ResponseOneIf<CoursepublicMainData>> {
        return this.http.put<ResponseOneIf<CoursepublicMainData>>(
            `${environment.apiUrl}/course-management/coursepublic-main/status/${coursepublicId}`,
            coursepublicMainData
        );
    }
    getCoursepublicLog(coursepublicLogId: number): Observable<ResponseOneIf<CoursepublicLogData>> {
        return this.http.get<ResponseOneIf<CoursepublicLogData>>(
            `${environment.apiUrl}/course-management/coursepublic-log/${coursepublicLogId}`
        );
    }
    putCoursepublicLog(
        coursepublicLogId: number,
        coursepublicLogData: CoursepublicLogData
    ): Observable<ResponseOneIf<CoursepublicLogData>> {
        return this.http.put<ResponseOneIf<CoursepublicLogData>>(
            `${environment.apiUrl}/course-management/coursepublic-log/${coursepublicLogId}`,
            coursepublicLogData
        );
    }
    getCoursepublicInstructor(coursepublicInstructorId: number): Observable<ResponseOneIf<CoursepublicInstructorData>> {
        return this.http.get<ResponseOneIf<CoursepublicInstructorData>>(
            `${environment.apiUrl}/course-management/coursepublic-instructor/${coursepublicInstructorId}`
        );
    }
    putCoursepublicInstructor(
        coursepublicInstructorId: number,
        coursepublicInstructorData: CoursepublicInstructorData
    ): Observable<ResponseOneIf<CoursepublicInstructorData>> {
        return this.http.put<ResponseOneIf<CoursepublicInstructorData>>(
            `${environment.apiUrl}/course-management/coursepublic-instructor/${coursepublicInstructorId}`,
            coursepublicInstructorData
        );
    }
    getCoursepublicAttach(coursepublicAttachId: number): Observable<ResponseOneIf<CoursepublicAttachData>> {
        return this.http.get<ResponseOneIf<CoursepublicAttachData>>(
            `${environment.apiUrl}/course-management/coursepublic-attach/${coursepublicAttachId}`
        );
    }
    putCoursepublicAttach(
        coursepublicAttachId: number,
        coursepublicAttachData: CoursepublicAttachData
    ): Observable<ResponseOneIf<CoursepublicAttachData>> {
        return this.http.put<ResponseOneIf<CoursepublicAttachData>>(
            `${environment.apiUrl}/course-management/coursepublic-attach/${coursepublicAttachId}`,
            coursepublicAttachData
        );
    }
    getCourseTarget(courseTargetId: number): Observable<ResponseOneIf<CourseTargetData>> {
        return this.http.get<ResponseOneIf<CourseTargetData>>(
            `${environment.apiUrl}/course-management/course-target/${courseTargetId}`
        );
    }
    putCourseTarget(
        courseTargetId: number,
        courseTargetData: CourseTargetData
    ): Observable<ResponseOneIf<CourseTargetData>> {
        return this.http.put<ResponseOneIf<CourseTargetData>>(
            `${environment.apiUrl}/course-management/course-target/${courseTargetId}`,
            courseTargetData
        );
    }
    getCourseTargetCourse(courseId: number): Observable<ResponseListIf<CourseTargetData>> {
        return this.http.get<ResponseListIf<CourseTargetData>>(
            `${environment.apiUrl}/course-management/course-target/course/${courseId}`
        );
    }
    putCourseTargetCourse(
        courseId: number,
        courseTargetData: CourseTargetData[]
    ): Observable<ResponseListIf<CourseTargetData>> {
        return this.http.put<ResponseListIf<CourseTargetData>>(
            `${environment.apiUrl}/course-management/course-target/course/${courseId}`,
            courseTargetData
        );
    }
    getCourseSkill(courseSkillId: number): Observable<ResponseOneIf<CourseSkillData>> {
        return this.http.get<ResponseOneIf<CourseSkillData>>(
            `${environment.apiUrl}/course-management/course-skill/${courseSkillId}`
        );
    }
    putCourseSkill(
        courseSkillId: number,
        courseSkillData: CourseSkillData
    ): Observable<ResponseOneIf<CourseSkillData>> {
        return this.http.put<ResponseOneIf<CourseSkillData>>(
            `${environment.apiUrl}/course-management/course-skill/${courseSkillId}`,
            courseSkillData
        );
    }
    getCourseSclo(courseScloId: number): Observable<ResponseOneIf<CourseScloData>> {
        return this.http.get<ResponseOneIf<CourseScloData>>(
            `${environment.apiUrl}/course-management/course-sclo/${courseScloId}`
        );
    }
    putCourseSclo(courseScloId: number, courseScloData: CourseScloData): Observable<ResponseOneIf<CourseScloData>> {
        return this.http.put<ResponseOneIf<CourseScloData>>(
            `${environment.apiUrl}/course-management/course-sclo/${courseScloId}`,
            courseScloData
        );
    }
    getCourseRequestAttach(courseRequestAttachId: number): Observable<ResponseOneIf<CourseRequestAttachData>> {
        return this.http.get<ResponseOneIf<CourseRequestAttachData>>(
            `${environment.apiUrl}/course-management/course-request-attach/${courseRequestAttachId}`
        );
    }
    putCourseRequestAttach(
        courseRequestAttachId: number,
        courseRequestAttachData: CourseRequestAttachData
    ): Observable<ResponseOneIf<CourseRequestAttachData>> {
        return this.http.put<ResponseOneIf<CourseRequestAttachData>>(
            `${environment.apiUrl}/course-management/course-request-attach/${courseRequestAttachId}`,
            courseRequestAttachData
        );
    }
    getCourseOccupation(courseOccupationId: number): Observable<ResponseOneIf<CourseOccupationData>> {
        return this.http.get<ResponseOneIf<CourseOccupationData>>(
            `${environment.apiUrl}/course-management/course-occupation/${courseOccupationId}`
        );
    }
    putCourseOccupation(
        courseOccupationId: number,
        courseOccupationData: CourseOccupationData
    ): Observable<ResponseOneIf<CourseOccupationData>> {
        return this.http.put<ResponseOneIf<CourseOccupationData>>(
            `${environment.apiUrl}/course-management/course-occupation/${courseOccupationId}`,
            courseOccupationData
        );
    }
    getCourseOccupationCourse(courseId: number): Observable<ResponseListIf<CourseOccupationData>> {
        return this.http.get<ResponseListIf<CourseOccupationData>>(
            `${environment.apiUrl}/course-management/course-occupation/course/${courseId}`
        );
    }
    putCourseOccupationCourse(
        courseId: number,
        courseOccupationData: CourseOccupationData[]
    ): Observable<ResponseListIf<CourseOccupationData>> {
        return this.http.put<ResponseListIf<CourseOccupationData>>(
            `${environment.apiUrl}/course-management/course-occupation/course/${courseId}`,
            courseOccupationData
        );
    }
    getCourseMatching(courseMatchingId: number): Observable<ResponseOneIf<CourseMatchingData>> {
        return this.http.get<ResponseOneIf<CourseMatchingData>>(
            `${environment.apiUrl}/course-management/course-matching/${courseMatchingId}`
        );
    }
    putCourseMatching(
        courseMatchingId: number,
        courseMatchingData: CourseMatchingData
    ): Observable<ResponseOneIf<CourseMatchingData>> {
        return this.http.put<ResponseOneIf<CourseMatchingData>>(
            `${environment.apiUrl}/course-management/course-matching/${courseMatchingId}`,
            courseMatchingData
        );
    }
    getCourseMatchingCourse(courseId: number): Observable<ResponseListIf<CourseMatchingData>> {
        return this.http.get<ResponseListIf<CourseMatchingData>>(
            `${environment.apiUrl}/course-management/course-matching/course/${courseId}`
        );
    }
    putCourseMatchingCourse(
        courseId: number,
        courseMatchingData: CourseMatchingData[]
    ): Observable<ResponseListIf<CourseMatchingData>> {
        return this.http.put<ResponseListIf<CourseMatchingData>>(
            `${environment.apiUrl}/course-management/course-matching/course/${courseId}`,
            courseMatchingData
        );
    }
    getCourseMain(courseId: number): Observable<ResponseOneIf<CourseMainData>> {
        return this.http.get<ResponseOneIf<CourseMainData>>(
            `${environment.apiUrl}/course-management/course-main/${courseId}`
        );
    }
    putCourseMain(courseId: number, courseMainData: CourseMainData): Observable<ResponseOneIf<CourseMainData>> {
        return this.http.put<ResponseOneIf<CourseMainData>>(
            `${environment.apiUrl}/course-management/course-main/${courseId}`,
            courseMainData
        );
    }
    putCourseMainStatus(courseId: number, courseMainData: CourseMainData): Observable<ResponseOneIf<CourseMainData>> {
        return this.http.put<ResponseOneIf<CourseMainData>>(
            `${environment.apiUrl}/course-management/course-main/status/${courseId}`,
            courseMainData
        );
    }
    getCourseLog(courseLogId: number): Observable<ResponseOneIf<CourseLogData>> {
        return this.http.get<ResponseOneIf<CourseLogData>>(
            `${environment.apiUrl}/course-management/course-log/${courseLogId}`
        );
    }
    getCourseLogTimeline(courseId: number): Observable<ResponseListIf<CourseLogData>> {
        return this.http.get<ResponseListIf<CourseLogData>>(
            `${environment.apiUrl}/course-management/course-log/timeline/${courseId}`
        );
    }
    putCourseLog(courseLogId: number, courseLogData: CourseLogData): Observable<ResponseOneIf<CourseLogData>> {
        return this.http.put<ResponseOneIf<CourseLogData>>(
            `${environment.apiUrl}/course-management/course-log/${courseLogId}`,
            courseLogData
        );
    }
    getCourseInstructor(courseInstructorId: number): Observable<ResponseOneIf<CourseInstructorData>> {
        return this.http.get<ResponseOneIf<CourseInstructorData>>(
            `${environment.apiUrl}/course-management/course-instructor/${courseInstructorId}`
        );
    }
    putCourseInstructor(
        courseInstructorId: number,
        courseInstructorData: CourseInstructorData
    ): Observable<ResponseOneIf<CourseInstructorData>> {
        return this.http.put<ResponseOneIf<CourseInstructorData>>(
            `${environment.apiUrl}/course-management/course-instructor/${courseInstructorId}`,
            courseInstructorData
        );
    }
    getCourseCompany(courseCompanyId: number): Observable<ResponseOneIf<CourseCompanyData>> {
        return this.http.get<ResponseOneIf<CourseCompanyData>>(
            `${environment.apiUrl}/course-management/course-company/${courseCompanyId}`
        );
    }
    putCourseCompany(
        courseCompanyId: number,
        courseCompanyData: CourseCompanyData
    ): Observable<ResponseOneIf<CourseCompanyData>> {
        return this.http.put<ResponseOneIf<CourseCompanyData>>(
            `${environment.apiUrl}/course-management/course-company/${courseCompanyId}`,
            courseCompanyData
        );
    }
    getCourseAttach(courseAttachId: number): Observable<ResponseOneIf<CourseAttachData>> {
        return this.http.get<ResponseOneIf<CourseAttachData>>(
            `${environment.apiUrl}/course-management/course-attach/${courseAttachId}`
        );
    }
    putCourseAttach(
        courseAttachId: number,
        courseAttachData: CourseAttachData
    ): Observable<ResponseOneIf<CourseAttachData>> {
        return this.http.put<ResponseOneIf<CourseAttachData>>(
            `${environment.apiUrl}/course-management/course-attach/${courseAttachId}`,
            courseAttachData
        );
    }
    getCourseActivity(courseActivityId: number): Observable<ResponseOneIf<CourseActivityData>> {
        return this.http.get<ResponseOneIf<CourseActivityData>>(
            `${environment.apiUrl}/course-management/course-activity/${courseActivityId}`
        );
    }
    putCourseActivity(
        courseActivityId: number,
        courseActivityData: CourseActivityData
    ): Observable<ResponseOneIf<CourseActivityData>> {
        return this.http.put<ResponseOneIf<CourseActivityData>>(
            `${environment.apiUrl}/course-management/course-activity/${courseActivityId}`,
            courseActivityData
        );
    }
    getCourseActivityMethod(courseActivityMethodId: number): Observable<ResponseOneIf<CourseActivityMethodData>> {
        return this.http.get<ResponseOneIf<CourseActivityMethodData>>(
            `${environment.apiUrl}/course-management/course-activity-method/${courseActivityMethodId}`
        );
    }
    putCourseActivityMethod(
        courseActivityMethodId: number,
        courseActivityMethodData: CourseActivityMethodData
    ): Observable<ResponseOneIf<CourseActivityMethodData>> {
        return this.http.put<ResponseOneIf<CourseActivityMethodData>>(
            `${environment.apiUrl}/course-management/course-activity-method/${courseActivityMethodId}`,
            courseActivityMethodData
        );
    }
    getCourseActivityMethodCourseActivity(
        courseActivityId: number
    ): Observable<ResponseListIf<CourseActivityMethodData>> {
        return this.http.get<ResponseListIf<CourseActivityMethodData>>(
            `${environment.apiUrl}/course-management/course-activity-method/course-activity/${courseActivityId}`
        );
    }
    putCourseActivityMethodCourseActivity(
        courseActivityId: number,
        courseActivityMethodData: CourseActivityMethodData[]
    ): Observable<ResponseListIf<CourseActivityMethodData>> {
        return this.http.put<ResponseListIf<CourseActivityMethodData>>(
            `${environment.apiUrl}/course-management/course-activity-method/course-activity/${courseActivityId}`,
            courseActivityMethodData
        );
    }
    findSwuCurriculum(swuCurriculumData: SwuCurriculumData): Observable<ResponseListIf<SwuCurriculumData>> {
        return this.http.post<ResponseListIf<SwuCurriculumData>>(
            `${environment.apiUrl}/course-management/find-swu-curriculum`,
            swuCurriculumData
        );
    }
    findCoursepublicMedia(
        coursepublicMediaData: CoursepublicMediaData
    ): Observable<ResponseListIf<CoursepublicMediaData>> {
        return this.http.post<ResponseListIf<CoursepublicMediaData>>(
            `${environment.apiUrl}/course-management/find-coursepublic-media`,
            coursepublicMediaData
        );
    }
    findCoursepublicMain(coursepublicMainData: CoursepublicMainData): Observable<ResponseListIf<CoursepublicMainData>> {
        return this.http.post<ResponseListIf<CoursepublicMainData>>(
            `${environment.apiUrl}/course-management/find-coursepublic-main`,
            coursepublicMainData
        );
    }
    findCoursepublicLog(coursepublicLogData: CoursepublicLogData): Observable<ResponseListIf<CoursepublicLogData>> {
        return this.http.post<ResponseListIf<CoursepublicLogData>>(
            `${environment.apiUrl}/course-management/find-coursepublic-log`,
            coursepublicLogData
        );
    }
    findCoursepublicInstructor(
        coursepublicInstructorData: CoursepublicInstructorData
    ): Observable<ResponseListIf<CoursepublicInstructorData>> {
        return this.http.post<ResponseListIf<CoursepublicInstructorData>>(
            `${environment.apiUrl}/course-management/find-coursepublic-instructor`,
            coursepublicInstructorData
        );
    }
    findCoursepublicAttach(
        coursepublicAttachData: CoursepublicAttachData
    ): Observable<ResponseListIf<CoursepublicAttachData>> {
        return this.http.post<ResponseListIf<CoursepublicAttachData>>(
            `${environment.apiUrl}/course-management/find-coursepublic-attach`,
            coursepublicAttachData
        );
    }
    findCourseTarget(courseTargetData: CourseTargetData): Observable<ResponseListIf<CourseTargetData>> {
        return this.http.post<ResponseListIf<CourseTargetData>>(
            `${environment.apiUrl}/course-management/find-course-target`,
            courseTargetData
        );
    }
    findCourseSkill(courseSkillData: CourseSkillData): Observable<ResponseListIf<CourseSkillData>> {
        return this.http.post<ResponseListIf<CourseSkillData>>(
            `${environment.apiUrl}/course-management/find-course-skill`,
            courseSkillData
        );
    }
    findCourseSclo(courseScloData: CourseScloData): Observable<ResponseListIf<CourseScloData>> {
        return this.http.post<ResponseListIf<CourseScloData>>(
            `${environment.apiUrl}/course-management/find-course-sclo`,
            courseScloData
        );
    }
    findCourseRequestAttach(
        courseRequestAttachData: CourseRequestAttachData
    ): Observable<ResponseListIf<CourseRequestAttachData>> {
        return this.http.post<ResponseListIf<CourseRequestAttachData>>(
            `${environment.apiUrl}/course-management/find-course-request-attach`,
            courseRequestAttachData
        );
    }
    findCourseOccupation(courseOccupationData: CourseOccupationData): Observable<ResponseListIf<CourseOccupationData>> {
        return this.http.post<ResponseListIf<CourseOccupationData>>(
            `${environment.apiUrl}/course-management/find-course-occupation`,
            courseOccupationData
        );
    }
    findCourseMatching(courseMatchingData: CourseMatchingData): Observable<ResponseListIf<CourseMatchingData>> {
        return this.http.post<ResponseListIf<CourseMatchingData>>(
            `${environment.apiUrl}/course-management/find-course-matching`,
            courseMatchingData
        );
    }
    findCourseMain(courseMainData: CourseMainData): Observable<ResponseListIf<CourseMainData>> {
        return this.http.post<ResponseListIf<CourseMainData>>(
            `${environment.apiUrl}/course-management/find-course-main`,
            courseMainData
        );
    }
    findCourseLog(courseLogData: CourseLogData): Observable<ResponseListIf<CourseLogData>> {
        return this.http.post<ResponseListIf<CourseLogData>>(
            `${environment.apiUrl}/course-management/find-course-log`,
            courseLogData
        );
    }
    findCourseInstructor(courseInstructorData: CourseInstructorData): Observable<ResponseListIf<CourseInstructorData>> {
        return this.http.post<ResponseListIf<CourseInstructorData>>(
            `${environment.apiUrl}/course-management/find-course-instructor`,
            courseInstructorData
        );
    }
    findCourseCompany(courseCompanyData: CourseCompanyData): Observable<ResponseListIf<CourseCompanyData>> {
        return this.http.post<ResponseListIf<CourseCompanyData>>(
            `${environment.apiUrl}/course-management/find-course-company`,
            courseCompanyData
        );
    }
    findCourseAttach(courseAttachData: CourseAttachData): Observable<ResponseListIf<CourseAttachData>> {
        return this.http.post<ResponseListIf<CourseAttachData>>(
            `${environment.apiUrl}/course-management/find-course-attach`,
            courseAttachData
        );
    }
    findCourseActivity(courseActivityData: CourseActivityData): Observable<ResponseListIf<CourseActivityData>> {
        return this.http.post<ResponseListIf<CourseActivityData>>(
            `${environment.apiUrl}/course-management/find-course-activity`,
            courseActivityData
        );
    }
    findCourseActivityMethod(
        courseActivityMethodData: CourseActivityMethodData
    ): Observable<ResponseListIf<CourseActivityMethodData>> {
        return this.http.post<ResponseListIf<CourseActivityMethodData>>(
            `${environment.apiUrl}/course-management/find-course-activity-method`,
            courseActivityMethodData
        );
    }
    postCoursepublicMedia(
        coursepublicMediaData: CoursepublicMediaData
    ): Observable<ResponseOneIf<CoursepublicMediaData>> {
        return this.http.post<ResponseOneIf<CoursepublicMediaData>>(
            `${environment.apiUrl}/course-management/coursepublic-media`,
            coursepublicMediaData
        );
    }
    postCoursepublicMain(coursepublicMainData: CoursepublicMainData): Observable<ResponseOneIf<CoursepublicMainData>> {
        return this.http.post<ResponseOneIf<CoursepublicMainData>>(
            `${environment.apiUrl}/course-management/coursepublic-main`,
            coursepublicMainData
        );
    }
    postCoursepublicLog(coursepublicLogData: CoursepublicLogData): Observable<ResponseOneIf<CoursepublicLogData>> {
        return this.http.post<ResponseOneIf<CoursepublicLogData>>(
            `${environment.apiUrl}/course-management/coursepublic-log`,
            coursepublicLogData
        );
    }
    postCoursepublicInstructor(
        coursepublicInstructorData: CoursepublicInstructorData
    ): Observable<ResponseOneIf<CoursepublicInstructorData>> {
        return this.http.post<ResponseOneIf<CoursepublicInstructorData>>(
            `${environment.apiUrl}/course-management/coursepublic-instructor`,
            coursepublicInstructorData
        );
    }
    postCoursepublicAttach(
        coursepublicAttachData: CoursepublicAttachData
    ): Observable<ResponseOneIf<CoursepublicAttachData>> {
        return this.http.post<ResponseOneIf<CoursepublicAttachData>>(
            `${environment.apiUrl}/course-management/coursepublic-attach`,
            coursepublicAttachData
        );
    }
    postCourseTarget(courseTargetData: CourseTargetData): Observable<ResponseOneIf<CourseTargetData>> {
        return this.http.post<ResponseOneIf<CourseTargetData>>(
            `${environment.apiUrl}/course-management/course-target`,
            courseTargetData
        );
    }
    postCourseSkill(courseSkillData: CourseSkillData): Observable<ResponseOneIf<CourseSkillData>> {
        return this.http.post<ResponseOneIf<CourseSkillData>>(
            `${environment.apiUrl}/course-management/course-skill`,
            courseSkillData
        );
    }
    postCourseSclo(courseScloData: CourseScloData): Observable<ResponseOneIf<CourseScloData>> {
        return this.http.post<ResponseOneIf<CourseScloData>>(
            `${environment.apiUrl}/course-management/course-sclo`,
            courseScloData
        );
    }
    postCourseRequestAttach(
        courseRequestAttachData: CourseRequestAttachData
    ): Observable<ResponseOneIf<CourseRequestAttachData>> {
        return this.http.post<ResponseOneIf<CourseRequestAttachData>>(
            `${environment.apiUrl}/course-management/course-request-attach`,
            courseRequestAttachData
        );
    }
    postCourseOccupation(courseOccupationData: CourseOccupationData): Observable<ResponseOneIf<CourseOccupationData>> {
        return this.http.post<ResponseOneIf<CourseOccupationData>>(
            `${environment.apiUrl}/course-management/course-occupation`,
            courseOccupationData
        );
    }
    postCourseMatching(courseMatchingData: CourseMatchingData): Observable<ResponseOneIf<CourseMatchingData>> {
        return this.http.post<ResponseOneIf<CourseMatchingData>>(
            `${environment.apiUrl}/course-management/course-matching`,
            courseMatchingData
        );
    }
    postCourseMain(courseMainData: CourseMainData): Observable<ResponseOneIf<CourseMainData>> {
        return this.http.post<ResponseOneIf<CourseMainData>>(
            `${environment.apiUrl}/course-management/course-main`,
            courseMainData
        );
    }
    postCourseMainCopy(courseMainData: CourseMainData): Observable<ResponseOneIf<CourseMainData>> {
        return this.http.post<ResponseOneIf<CourseMainData>>(
            `${environment.apiUrl}/course-management/course-main/copy`,
            courseMainData
        );
    }
    postCourseLog(courseLogData: CourseLogData): Observable<ResponseOneIf<CourseLogData>> {
        return this.http.post<ResponseOneIf<CourseLogData>>(
            `${environment.apiUrl}/course-management/course-log`,
            courseLogData
        );
    }
    postCourseInstructor(courseInstructorData: CourseInstructorData): Observable<ResponseOneIf<CourseInstructorData>> {
        return this.http.post<ResponseOneIf<CourseInstructorData>>(
            `${environment.apiUrl}/course-management/course-instructor`,
            courseInstructorData
        );
    }
    postCourseCompany(courseCompanyData: CourseCompanyData): Observable<ResponseOneIf<CourseCompanyData>> {
        return this.http.post<ResponseOneIf<CourseCompanyData>>(
            `${environment.apiUrl}/course-management/course-company`,
            courseCompanyData
        );
    }
    postCourseAttach(courseAttachData: CourseAttachData): Observable<ResponseOneIf<CourseAttachData>> {
        return this.http.post<ResponseOneIf<CourseAttachData>>(
            `${environment.apiUrl}/course-management/course-attach`,
            courseAttachData
        );
    }
    postCourseActivity(courseActivityData: CourseActivityData): Observable<ResponseOneIf<CourseActivityData>> {
        return this.http.post<ResponseOneIf<CourseActivityData>>(
            `${environment.apiUrl}/course-management/course-activity`,
            courseActivityData
        );
    }
    postCourseActivityMethod(
        courseActivityMethodData: CourseActivityMethodData
    ): Observable<ResponseOneIf<CourseActivityMethodData>> {
        return this.http.post<ResponseOneIf<CourseActivityMethodData>>(
            `${environment.apiUrl}/course-management/course-activity-method`,
            courseActivityMethodData
        );
    }

    deleteCourseActivity(courseActivityId: number): Observable<ResponseOneIf<null>> {
        return this.http.delete<ResponseOneIf<null>>(
            `${environment.apiUrl}/course-management/course-activity/${courseActivityId}`
        );
    }

    deleteCourseAttach(courseAttachId: number): Observable<ResponseOneIf<null>> {
        return this.http.delete<ResponseOneIf<null>>(
            `${environment.apiUrl}/course-management/course-attach/${courseAttachId}`
        );
    }

    deleteCourseCompany(courseCompanyId: number): Observable<ResponseOneIf<null>> {
        return this.http.delete<ResponseOneIf<null>>(
            `${environment.apiUrl}/course-management/course-company/${courseCompanyId}`
        );
    }

    deleteCourseInstructor(courseInstructorId: number): Observable<ResponseOneIf<null>> {
        return this.http.delete<ResponseOneIf<null>>(
            `${environment.apiUrl}/course-management/course-instructor/${courseInstructorId}`
        );
    }

    deleteCourseMain(courseId: number): Observable<ResponseOneIf<null>> {
        return this.http.delete<ResponseOneIf<null>>(`${environment.apiUrl}/course-management/course-main/${courseId}`);
    }

    deleteCourseMatching(courseMatchingId: number): Observable<ResponseOneIf<null>> {
        return this.http.delete<ResponseOneIf<null>>(
            `${environment.apiUrl}/course-management/course-matching/${courseMatchingId}`
        );
    }

    deleteCoursepublicAttach(coursepublicAttachId: number): Observable<ResponseOneIf<null>> {
        return this.http.delete<ResponseOneIf<null>>(
            `${environment.apiUrl}/course-management/coursepublic-attach/${coursepublicAttachId}`
        );
    }

    deleteCoursepublicInstructor(coursepublicInstructorId: number): Observable<ResponseOneIf<null>> {
        return this.http.delete<ResponseOneIf<null>>(
            `${environment.apiUrl}/course-management/coursepublic-instructor/${coursepublicInstructorId}`
        );
    }

    deleteCoursepublicMedia(coursepublicMediaId: number): Observable<ResponseOneIf<null>> {
        return this.http.delete<ResponseOneIf<null>>(
            `${environment.apiUrl}/course-management/coursepublic-media/${coursepublicMediaId}`
        );
    }

    deleteCourseRequestAttach(courseRequestAttachId: number): Observable<ResponseOneIf<null>> {
        return this.http.delete<ResponseOneIf<null>>(
            `${environment.apiUrl}/course-management/course-request-attach/${courseRequestAttachId}`
        );
    }

    deleteCourseSclo(courseScloId: number): Observable<ResponseOneIf<null>> {
        return this.http.delete<ResponseOneIf<null>>(
            `${environment.apiUrl}/course-management/course-sclo/${courseScloId}`
        );
    }

    deleteCourseSkill(courseSkillId: number): Observable<ResponseOneIf<null>> {
        return this.http.delete<ResponseOneIf<null>>(
            `${environment.apiUrl}/course-management/course-skill/${courseSkillId}`
        );
    }

    deleteCoursepublicMain(coursepublicId: number): Observable<ResponseOneIf<null>> {
        return this.http.delete<ResponseOneIf<null>>(
            `${environment.apiUrl}/course-management/coursepublic-main/${coursepublicId}`
        );
    }

    getRegistrationList(coursepublicId: number): Observable<ResponseListIf<FinancePaymentData>> {
        console.log('>>>coursepublicId::', coursepublicId);
        return this.http.get<ResponseListIf<FinancePaymentData>>(
            `${environment.apiUrl}/course-management/get-registration-list/${coursepublicId}`
        );
    }

    putCancelApproval(coursepublicId: number, criteria: any): Observable<ResponseOneIf<CoursepublicMainData>> {
        return this.http.put<ResponseOneIf<CoursepublicMainData>>(
            `${environment.apiUrl}/course-management/put-cancel-approval/${coursepublicId}`,
            criteria
        );
    }

    getMasSharePercent(depId: number): Observable<ResponseListIf<MasSharePercentData>> {
        return this.http.get<ResponseListIf<MasSharePercentData>>(
            `${environment.apiUrl}/course-management/get-mas-share-percent-data/${depId}`
        );
    }

    loadMasGeneralSkillLevel(item: CourseSkillData): Observable<ResponseListIf<MasGeneralSkillLevelData>> {
        return this.http.post<ResponseListIf<MasGeneralSkillLevelData>>(
            `${environment.apiUrl}/course-management/load-mas-general-skill-level-data`,
            item
        );
    }

    getCoursePublicLog(coursepublicId: number): Observable<ResponseListIf<CoursepublicLogData>> {
        return this.http.get<ResponseListIf<CoursepublicLogData>>(
            `${environment.apiUrl}/course-management/get-course-public-log-data/${coursepublicId}`
        );
    }

    getCoursepublicLogTimeline(coursepublicId: number): Observable<ResponseListIf<CoursepublicLogData>> {
        return this.http.get<ResponseListIf<CoursepublicLogData>>(
            `${environment.apiUrl}/course-management/coursepublic-log/timeline/${coursepublicId}`
        );
    }

    putApproveCancelStatus(coursepublicId: number, criteria: any): Observable<ResponseListIf<CoursepublicMainData>> {
        return this.http.put<ResponseListIf<CoursepublicMainData>>(
            `${environment.apiUrl}/course-management/put-approve-cancel-status/${coursepublicId}`,
            criteria
        );
    }

    putRejectCancelStatus(coursepublicId: number, criteria: any): Observable<ResponseListIf<CoursepublicMainData>> {
        return this.http.put<ResponseListIf<CoursepublicMainData>>(
            `${environment.apiUrl}/course-management/put-reject-cancel-status/${coursepublicId}`,
            criteria
        );
    }
}
